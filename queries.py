import sqlite3


def execute_query(query, params=()):
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è SQL-–∑–∞–ø–∏—Ç—É —Ç–∞ –≤–∏–≤–æ–¥—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É"""
    conn = sqlite3.connect("task_manager.db")
    cursor = conn.cursor()
    cursor.execute(query, params)
    results = cursor.fetchall()
    conn.close()
    return results


# –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –ø–µ–≤–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def get_tasks_by_user(user_id):
    query = "SELECT * FROM tasks WHERE user_id = ?"
    return execute_query(query, (user_id,))


# –í–∏–±—Ä–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞ –ø–µ–≤–Ω–∏–º —Å—Ç–∞—Ç—É—Å–æ–º
def get_tasks_by_status(status_name):
    query = """
        SELECT * FROM tasks 
        WHERE status_id = (SELECT id FROM status WHERE name = ?)
    """
    return execute_query(query, (status_name,))


# –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
def update_task_status(task_id, new_status):
    conn = sqlite3.connect("task_manager.db")
    cursor = conn.cursor()
    cursor.execute(
        """
        UPDATE tasks SET status_id = (SELECT id FROM status WHERE name = ?) 
        WHERE id = ?
    """,
        (new_status, task_id),
    )
    conn.commit()
    conn.close()


# –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –Ω–µ –º–∞—é—Ç—å –∂–æ–¥–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è
def get_users_without_tasks():
    query = """
        SELECT * FROM users WHERE id NOT IN (SELECT DISTINCT user_id FROM tasks)
    """
    return execute_query(query)


# –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def add_task(title, description, status_name, user_id):
    conn = sqlite3.connect("task_manager.db")
    cursor = conn.cursor()
    cursor.execute(
        """
        INSERT INTO tasks (title, description, status_id, user_id)
        VALUES (?, ?, (SELECT id FROM status WHERE name = ?), ?)
    """,
        (title, description, status_name, user_id),
    )
    conn.commit()
    conn.close()


# –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è, —è–∫—ñ —â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ
def get_unfinished_tasks():
    query = """
        SELECT * FROM tasks WHERE status_id != (SELECT id FROM status WHERE name = 'completed')
    """
    return execute_query(query)


# –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è
def delete_task(task_id):
    conn = sqlite3.connect("task_manager.db")
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    conn.close()


# –ó–Ω–∞–π—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –ø–µ–≤–Ω–æ—é –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—é –ø–æ—à—Ç–æ—é
def find_users_by_email(email_pattern):
    query = "SELECT * FROM users WHERE email LIKE ?"
    return execute_query(query, (email_pattern,))


# –û–Ω–æ–≤–∏—Ç–∏ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
def update_user_name(user_id, new_name):
    conn = sqlite3.connect("task_manager.db")
    cursor = conn.cursor()
    cursor.execute("UPDATE users SET fullname = ? WHERE id = ?", (new_name, user_id))
    conn.commit()
    conn.close()


# –û—Ç—Ä–∏–º–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–≤–¥–∞–Ω—å –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å—É
def get_task_count_by_status():
    query = """
        SELECT s.name, COUNT(t.id) 
        FROM status s 
        LEFT JOIN tasks t ON s.id = t.status_id 
        GROUP BY s.name
    """
    return execute_query(query)


# –û—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è, —è–∫—ñ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º –∑ –ø–µ–≤–Ω–æ—é –¥–æ–º–µ–Ω–Ω–æ—é —á–∞—Å—Ç–∏–Ω–æ—é –ø–æ—à—Ç–∏
def get_tasks_by_email_domain(domain):
    query = """
        SELECT t.* FROM tasks t
        JOIN users u ON t.user_id = u.id
        WHERE u.email LIKE ?
    """
    return execute_query(query, ("%" + domain,))


# –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å, —â–æ –Ω–µ –º–∞—é—Ç—å –æ–ø–∏—Å—É
def get_tasks_without_description():
    query = "SELECT * FROM tasks WHERE description IS NULL OR description = ''"
    return execute_query(query)


# –í–∏–±—Ä–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ —ó—Ö–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è, —è–∫—ñ —î —É —Å—Ç–∞—Ç—É—Å—ñ 'in progress'
def get_users_with_in_progress_tasks():
    query = """
        SELECT u.fullname, t.title FROM users u
        JOIN tasks t ON u.id = t.user_id
        WHERE t.status_id = (SELECT id FROM status WHERE name = 'in progress')
    """
    return execute_query(query)


# –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ó—Ö–Ω—ñ—Ö –∑–∞–≤–¥–∞–Ω—å
def get_users_with_task_count():
    query = """
        SELECT u.fullname, COUNT(t.id) FROM users u
        LEFT JOIN tasks t ON u.id = t.user_id
        GROUP BY u.fullname
    """
    return execute_query(query)


# üî• –¢–µ—Å—Ç—É—î–º–æ –¥–µ—è–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
if __name__ == "__main__":
    print("–ó–∞–≤–¥–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ id=1:", get_tasks_by_user(1))
    print("–ó–∞–≤–¥–∞–Ω–Ω—è –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º 'new':", get_tasks_by_status("new"))
    print("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –±–µ–∑ –∑–∞–≤–¥–∞–Ω—å:", get_users_without_tasks())
    print("–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–≤–¥–∞–Ω—å –∑–∞ —Å—Ç–∞—Ç—É—Å–∞–º–∏:", get_task_count_by_status())
    print(
        "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —Ç–∞ —ó—Ö–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è 'in progress':",
        get_users_with_in_progress_tasks(),
    )
